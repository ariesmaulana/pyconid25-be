"""create_auth_table

Revision ID: 250b56a10ce6
Revises:
Create Date: 2025-03-14 07:04:46.635457

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "250b56a10ce6"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="public"
    )
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False, schema="public")

    op.create_table(
        "token",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("token", sa.String(), nullable=False),
        sa.Column("expired_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["public.user.id"]),
        sa.PrimaryKeyConstraint("id"),
        schema="public"
    )
    op.create_index(op.f("ix_token_id"), "token", ["id"], unique=False, schema="public")
    op.create_index(op.f("ix_token_user_id"), "token", ["user_id"], unique=False, schema="public")

    op.create_table(
        "refresh_token",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("refresh_token", sa.String(), nullable=False),
        sa.Column("expired_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("token_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["token_id"], ["public.token.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["public.user.id"]),
        sa.PrimaryKeyConstraint("id"),
        schema="public"
    )
    op.create_index(op.f("ix_refresh_token_id"), "refresh_token", ["id"], unique=False, schema="public")
    op.create_index(op.f("ix_refresh_token_user_id"), "refresh_token", ["user_id"], unique=False, schema="public")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_refresh_token_user_id"), table_name="refresh_token", schema="public")
    op.drop_index(op.f("ix_refresh_token_id"), table_name="refresh_token", schema="public")
    op.drop_table("refresh_token", schema="public")
    op.drop_index(op.f("ix_token_user_id"), table_name="token", schema="public")
    op.drop_index(op.f("ix_token_id"), table_name="token", schema="public")
    op.drop_table("token", schema="public")
    op.drop_index(op.f("ix_user_id"), table_name="user", schema="public")
    op.drop_table("user", schema="public")
    # ### end Alembic commands ###
